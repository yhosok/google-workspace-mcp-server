{"numFailedTestSuites":3,"numFailedTests":12,"numPassedTestSuites":16,"numPassedTests":319,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":331,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1756208839840,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["SheetsAppendTool","getToolName"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsAppendTool","getToolMetadata"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool executeImpl should append data to spreadsheet successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should append data to spreadsheet successfully"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool executeImpl should handle multiple rows","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple rows"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool executeImpl should handle large batch append","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle large batch append"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":33,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts:132:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsAppendTool executeImpl should validate empty spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty spreadsheet ID"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts:148:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsAppendTool executeImpl should validate empty range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty range"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts:164:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsAppendTool executeImpl should validate invalid range format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate invalid range format"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values cannot be empty for append operation\"\nReceived string:    \"Cannot read properties of undefined (reading 'isErr')\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values cannot be empty for append operation\"\nReceived string:    \"Cannot read properties of undefined (reading 'isErr')\"\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts:181:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsAppendTool executeImpl should validate empty values for append","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should validate empty values for append"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values must be an array\"\nReceived string:    \"Invalid input data: Found 1 validation error\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values must be an array\"\nReceived string:    \"Invalid input data: Found 1 validation error\"\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts:197:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsAppendTool executeImpl should validate values parameter type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should validate values parameter type"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool executeImpl should handle service error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle service error"},{"ancestorTitles":["SheetsAppendTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool executeImpl should handle authentication failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["SheetsAppendTool","error handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAppendTool error handling should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"}],"endTime":1756208849905,"message":"  ● SheetsAppendTool › executeImpl › should validate empty spreadsheet ID\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      130 |       expect(result.isErr()).toBe(true);\n      131 |       if (result.isErr()) {\n    > 132 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      133 |         expect(result.error.message).toContain('Spreadsheet ID cannot be empty');\n      134 |       }\n      135 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/append.tool.test.ts:132:30)\n\n  ● SheetsAppendTool › executeImpl › should validate empty range\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      146 |       expect(result.isErr()).toBe(true);\n      147 |       if (result.isErr()) {\n    > 148 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      149 |         expect(result.error.message).toContain('Range cannot be empty');\n      150 |       }\n      151 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/append.tool.test.ts:148:30)\n\n  ● SheetsAppendTool › executeImpl › should validate invalid range format\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      162 |       expect(result.isErr()).toBe(true);\n      163 |       if (result.isErr()) {\n    > 164 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      165 |         expect(result.error.message).toContain('Invalid range format');\n      166 |       }\n      167 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/append.tool.test.ts:164:30)\n\n  ● SheetsAppendTool › executeImpl › should validate empty values for append\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Values cannot be empty for append operation\"\n    Received string:    \"Cannot read properties of undefined (reading 'isErr')\"\n\n      179 |       if (result.isErr()) {\n      180 |         expect(result.error).toBeInstanceOf(GoogleSheetsError);\n    > 181 |         expect(result.error.message).toContain('Values cannot be empty for append operation');\n          |                                      ^\n      182 |       }\n      183 |     });\n      184 |\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/append.tool.test.ts:181:38)\n\n  ● SheetsAppendTool › executeImpl › should validate values parameter type\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Values must be an array\"\n    Received string:    \"Invalid input data: Found 1 validation error\"\n\n      195 |       if (result.isErr()) {\n      196 |         expect(result.error).toBeInstanceOf(GoogleSheetsError);\n    > 197 |         expect(result.error.message).toContain('Values must be an array');\n          |                                      ^\n      198 |       }\n      199 |     });\n      200 |\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/append.tool.test.ts:197:38)\n","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/append.tool.test.ts","startTime":1756208840056,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsCreateSpreadsheetTool","getToolName"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","getToolMetadata"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","successful execution"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl successful execution should create spreadsheet with minimal parameters","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create spreadsheet with minimal parameters"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","successful execution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl successful execution should create spreadsheet with custom sheet titles","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create spreadsheet with custom sheet titles"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","successful execution"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl successful execution should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl parameter validation should fail with empty title","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should fail with empty title"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","parameter validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl parameter validation should fail with whitespace-only title","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should fail with whitespace-only title"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl parameter validation should fail with empty sheet titles array","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should fail with empty sheet titles array"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl parameter validation should fail with empty sheet title in array","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should fail with empty sheet title in array"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","parameter validation"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl parameter validation should fail with duplicate sheet titles","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fail with duplicate sheet titles"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","environment validation"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl environment validation should fail when GOOGLE_DRIVE_FOLDER_ID is not set","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fail when GOOGLE_DRIVE_FOLDER_ID is not set"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","environment validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl environment validation should fail when GOOGLE_DRIVE_FOLDER_ID is empty","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fail when GOOGLE_DRIVE_FOLDER_ID is empty"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","environment validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl environment validation should fail when GOOGLE_DRIVE_FOLDER_ID is whitespace only","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fail when GOOGLE_DRIVE_FOLDER_ID is whitespace only"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","authentication validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl authentication validation should fail when authentication validation fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should fail when authentication validation fails"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","service errors"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl service errors should handle SheetsService errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle SheetsService errors"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","service errors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl service errors should handle Drive API folder access errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle Drive API folder access errors"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","service errors"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl service errors should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl edge cases should handle very long spreadsheet titles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle very long spreadsheet titles"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl edge cases should handle special characters in spreadsheet title","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle special characters in spreadsheet title"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","edge cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl edge cases should handle maximum number of initial sheets","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle maximum number of initial sheets"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl edge cases should handle special characters in sheet titles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle special characters in sheet titles"},{"ancestorTitles":["SheetsCreateSpreadsheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsCreateSpreadsheetTool executeImpl edge cases should handle long sheet titles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle long sheet titles"}],"endTime":1756208849899,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/create-spreadsheet.tool.test.ts","startTime":1756208840057,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsWriteTool","getToolName"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsWriteTool","getToolMetadata"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool executeImpl should write data to spreadsheet successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should write data to spreadsheet successfully"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool executeImpl should handle empty values","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle empty values"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool executeImpl should handle large datasets","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":33,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/write.tool.test.ts:132:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsWriteTool executeImpl should validate empty spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty spreadsheet ID"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":10,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/write.tool.test.ts:148:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsWriteTool executeImpl should validate empty range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty range"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/write.tool.test.ts:164:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsWriteTool executeImpl should validate invalid range format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate invalid range format"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values must be an array\"\nReceived string:    \"Invalid input data: Found 1 validation error\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Values must be an array\"\nReceived string:    \"Invalid input data: Found 1 validation error\"\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/write.tool.test.ts:182:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsWriteTool executeImpl should validate values parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should validate values parameter"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool executeImpl should handle service error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle service error"},{"ancestorTitles":["SheetsWriteTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool executeImpl should handle authentication failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["SheetsWriteTool","error handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsWriteTool error handling should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"}],"endTime":1756208849915,"message":"  ● SheetsWriteTool › executeImpl › should validate empty spreadsheet ID\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      130 |       expect(result.isErr()).toBe(true);\n      131 |       if (result.isErr()) {\n    > 132 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      133 |         expect(result.error.message).toContain('Spreadsheet ID cannot be empty');\n      134 |       }\n      135 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/write.tool.test.ts:132:30)\n\n  ● SheetsWriteTool › executeImpl › should validate empty range\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      146 |       expect(result.isErr()).toBe(true);\n      147 |       if (result.isErr()) {\n    > 148 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      149 |         expect(result.error.message).toContain('Range cannot be empty');\n      150 |       }\n      151 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/write.tool.test.ts:148:30)\n\n  ● SheetsWriteTool › executeImpl › should validate invalid range format\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      162 |       expect(result.isErr()).toBe(true);\n      163 |       if (result.isErr()) {\n    > 164 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      165 |         expect(result.error.message).toContain('Invalid range format');\n      166 |       }\n      167 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/write.tool.test.ts:164:30)\n\n  ● SheetsWriteTool › executeImpl › should validate values parameter\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Values must be an array\"\n    Received string:    \"Invalid input data: Found 1 validation error\"\n\n      180 |       if (result.isErr()) {\n      181 |         expect(result.error).toBeInstanceOf(GoogleSheetsError);\n    > 182 |         expect(result.error.message).toContain('Values must be an array');\n          |                                      ^\n      183 |       }\n      184 |     });\n      185 |\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/write.tool.test.ts:182:38)\n","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/write.tool.test.ts","startTime":1756208840056,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsAddSheetTool","getToolName"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsAddSheetTool","getToolMetadata"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","successful execution"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl successful execution should add sheet with minimal parameters","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should add sheet with minimal parameters"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","successful execution"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl successful execution should add sheet with specific index","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add sheet with specific index"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","successful execution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl successful execution should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","parameter validation"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl parameter validation should fail with empty spreadsheetId","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should fail with empty spreadsheetId"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl parameter validation should fail with empty title","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should fail with empty title"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl parameter validation should fail with negative index","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should fail with negative index"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","parameter validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl parameter validation should fail with whitespace-only title","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should fail with whitespace-only title"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","authentication validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl authentication validation should fail when authentication validation fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should fail when authentication validation fails"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","service errors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl service errors should handle SheetsService errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle SheetsService errors"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","service errors"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl service errors should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl edge cases should handle very long sheet titles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle very long sheet titles"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl edge cases should handle special characters in sheet title","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle special characters in sheet title"},{"ancestorTitles":["SheetsAddSheetTool","executeImpl","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsAddSheetTool executeImpl edge cases should handle maximum index value","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle maximum index value"}],"endTime":1756208849932,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/add-sheet.tool.test.ts","startTime":1756208840057,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsTools","constructor"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools constructor should create instance with required services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create instance with required services"},{"ancestorTitles":["SheetsTools","sheetsList"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsList should return list of spreadsheets","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return list of spreadsheets"},{"ancestorTitles":["SheetsTools","sheetsList"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsList should handle empty spreadsheet list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty spreadsheet list"},{"ancestorTitles":["SheetsTools","sheetsList"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsList should handle error when service fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error when service fails"},{"ancestorTitles":["SheetsTools","sheetsRead"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsRead should read data from spreadsheet range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should read data from spreadsheet range"},{"ancestorTitles":["SheetsTools","sheetsRead"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsRead should handle empty range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty range"},{"ancestorTitles":["SheetsTools","sheetsRead"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsRead should handle error for invalid spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error for invalid spreadsheet ID"},{"ancestorTitles":["SheetsTools","sheetsRead"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsRead should handle error for invalid range format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error for invalid range format"},{"ancestorTitles":["SheetsTools","sheetsWrite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsWrite should write data to spreadsheet range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should write data to spreadsheet range"},{"ancestorTitles":["SheetsTools","sheetsWrite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsWrite should handle empty values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty values"},{"ancestorTitles":["SheetsTools","sheetsWrite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsWrite should handle error for invalid parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error for invalid parameters"},{"ancestorTitles":["SheetsTools","sheetsWrite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsWrite should handle large datasets","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large datasets"},{"ancestorTitles":["SheetsTools","sheetsAppend"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsAppend should append data to spreadsheet","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should append data to spreadsheet"},{"ancestorTitles":["SheetsTools","sheetsAppend"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsAppend should handle multiple rows","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple rows"},{"ancestorTitles":["SheetsTools","sheetsAppend"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsAppend should handle error for invalid spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error for invalid spreadsheet ID"},{"ancestorTitles":["SheetsTools","sheetsAppend"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools sheetsAppend should handle error from sheets service","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error from sheets service"},{"ancestorTitles":["SheetsTools","error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools error handling should handle authentication errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle authentication errors"},{"ancestorTitles":["SheetsTools","error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools error handling should handle service initialization errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle service initialization errors"},{"ancestorTitles":["SheetsTools","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools parameter validation should validate spreadsheet ID parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate spreadsheet ID parameter"},{"ancestorTitles":["SheetsTools","parameter validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools parameter validation should validate range parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate range parameter"},{"ancestorTitles":["SheetsTools","parameter validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools parameter validation should validate values parameter for write operations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should validate values parameter for write operations"},{"ancestorTitles":["SheetsTools","integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools integration scenarios should handle read-write cycle","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle read-write cycle"},{"ancestorTitles":["SheetsTools","integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools integration scenarios should handle bulk operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle bulk operations"},{"ancestorTitles":["SheetsTools","performance considerations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools performance considerations should handle timeout scenarios","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle timeout scenarios"},{"ancestorTitles":["SheetsTools","performance considerations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsTools performance considerations should handle rate limiting","invocations":1,"location":null,"numPassingAsserts":21,"retryReasons":[],"status":"passed","title":"should handle rate limiting"}],"endTime":1756208849941,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/sheets-tools.test.ts","startTime":1756208840056,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsReadTool","getToolName"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsReadTool","getToolMetadata"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool executeImpl should read data from spreadsheet range successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should read data from spreadsheet range successfully"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool executeImpl should handle empty range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty range"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":9,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/read.tool.test.ts:111:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsReadTool executeImpl should validate empty spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty spreadsheet ID"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/read.tool.test.ts:126:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsReadTool executeImpl should validate empty range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate empty range"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: GoogleSheetsInvalidRangeError\nReceived constructor: GoogleSheetsError\n\n    at Object.<anonymous> (/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/read.tool.test.ts:141:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SheetsReadTool executeImpl should validate invalid range format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate invalid range format"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool executeImpl should handle service error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle service error"},{"ancestorTitles":["SheetsReadTool","executeImpl"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool executeImpl should handle authentication failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["SheetsReadTool","error handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsReadTool error handling should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"}],"endTime":1756208849978,"message":"  ● SheetsReadTool › executeImpl › should validate empty spreadsheet ID\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      109 |       expect(result.isErr()).toBe(true);\n      110 |       if (result.isErr()) {\n    > 111 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      112 |         expect(result.error.message).toContain('Spreadsheet ID cannot be empty');\n      113 |       }\n      114 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/read.tool.test.ts:111:30)\n\n  ● SheetsReadTool › executeImpl › should validate empty range\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      124 |       expect(result.isErr()).toBe(true);\n      125 |       if (result.isErr()) {\n    > 126 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      127 |         expect(result.error.message).toContain('Range cannot be empty');\n      128 |       }\n      129 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/read.tool.test.ts:126:30)\n\n  ● SheetsReadTool › executeImpl › should validate invalid range format\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor: GoogleSheetsInvalidRangeError\n    Received constructor: GoogleSheetsError\n\n      139 |       expect(result.isErr()).toBe(true);\n      140 |       if (result.isErr()) {\n    > 141 |         expect(result.error).toBeInstanceOf(GoogleSheetsInvalidRangeError);\n          |                              ^\n      142 |         expect(result.error.message).toContain('Invalid range format');\n      143 |       }\n      144 |     });\n\n      at Object.<anonymous> (tests/__tests__/tools/sheets/read.tool.test.ts:141:30)\n","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/read.tool.test.ts","startTime":1756208840056,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ToolRegistry","Abstract class structure"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Abstract class structure should require getToolName to be implemented","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should require getToolName to be implemented"},{"ancestorTitles":["ToolRegistry","Abstract class structure"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Abstract class structure should require getToolMetadata to be implemented","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should require getToolMetadata to be implemented"},{"ancestorTitles":["ToolRegistry","Abstract class structure"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Abstract class structure should require executeImpl to be implemented","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should require executeImpl to be implemented"},{"ancestorTitles":["ToolRegistry","registerTool method"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry registerTool method should register tool with server using tool name and metadata","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should register tool with server using tool name and metadata"},{"ancestorTitles":["ToolRegistry","registerTool method"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry registerTool method should create handler function that calls executeImpl","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create handler function that calls executeImpl"},{"ancestorTitles":["ToolRegistry","registerTool method"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry registerTool method should log tool registration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log tool registration"},{"ancestorTitles":["ToolRegistry","Error handling"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Error handling should handle errors in executeImpl gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors in executeImpl gracefully"},{"ancestorTitles":["ToolRegistry","Parameter validation integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Parameter validation integration should work with zod schema validation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should work with zod schema validation"},{"ancestorTitles":["ToolRegistry","Logger integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Logger integration should use provided logger","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use provided logger"},{"ancestorTitles":["ToolRegistry","Logger integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Logger integration should create default logger if none provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create default logger if none provided"},{"ancestorTitles":["ToolRegistry","Tool registration patterns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Tool registration patterns should support complex input schemas","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should support complex input schemas"},{"ancestorTitles":["ToolRegistry","Tool registry lifecycle"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistry Tool registry lifecycle should maintain tool state across multiple calls","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain tool state across multiple calls"}],"endTime":1756208850039,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/src/tools/base/tool-registry.test.ts","startTime":1756208849923,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsResources","constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources constructor should create instance with required services","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create instance with required services"},{"ancestorTitles":["SheetsResources","getSpreadsheetSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetSchema should return spreadsheet schema with tools and resources info","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return spreadsheet schema with tools and resources info"},{"ancestorTitles":["SheetsResources","getSpreadsheetSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetSchema should include all 4 tool definitions in schema","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include all 4 tool definitions in schema"},{"ancestorTitles":["SheetsResources","getSpreadsheetSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetSchema should include resource definitions in schema","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include resource definitions in schema"},{"ancestorTitles":["SheetsResources","getSpreadsheetSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetSchema should include version information","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include version information"},{"ancestorTitles":["SheetsResources","getSpreadsheetSchema"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetSchema should handle invalid URI","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid URI"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should return spreadsheet data for valid ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return spreadsheet data for valid ID"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should include spreadsheet metadata","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should include spreadsheet metadata"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should include sheet information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should include sheet information"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should handle invalid spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid spreadsheet ID"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should handle empty URI","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty URI"},{"ancestorTitles":["SheetsResources","getSpreadsheetData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources getSpreadsheetData should handle empty spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty spreadsheet ID"},{"ancestorTitles":["SheetsResources","extractSpreadsheetId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources extractSpreadsheetId should extract ID from valid spreadsheet URI","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract ID from valid spreadsheet URI"},{"ancestorTitles":["SheetsResources","extractSpreadsheetId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources extractSpreadsheetId should handle URI with query parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle URI with query parameters"},{"ancestorTitles":["SheetsResources","extractSpreadsheetId"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources extractSpreadsheetId should handle URI with hash fragment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle URI with hash fragment"},{"ancestorTitles":["SheetsResources","extractSpreadsheetId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources extractSpreadsheetId should throw error for invalid URI format","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should throw error for invalid URI format"},{"ancestorTitles":["SheetsResources","extractSpreadsheetId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources extractSpreadsheetId should handle complex spreadsheet IDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle complex spreadsheet IDs"},{"ancestorTitles":["SheetsResources","error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources error handling should handle auth service errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle auth service errors"},{"ancestorTitles":["SheetsResources","error handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources error handling should handle sheets service errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle sheets service errors"},{"ancestorTitles":["SheetsResources","error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsResources error handling should handle network errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle network errors"}],"endTime":1756208850042,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/sheets-resources.test.ts","startTime":1756208849988,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsListTool","getToolName"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool getToolName should return correct tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct tool name"},{"ancestorTitles":["SheetsListTool","getToolMetadata"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool getToolMetadata should return correct metadata","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return correct metadata"},{"ancestorTitles":["SheetsListTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool executeImpl should return list of spreadsheets on success","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return list of spreadsheets on success"},{"ancestorTitles":["SheetsListTool","executeImpl"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool executeImpl should handle authentication failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle authentication failure"},{"ancestorTitles":["SheetsListTool","executeImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool executeImpl should handle service error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle service error"},{"ancestorTitles":["SheetsListTool","executeImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool executeImpl should handle empty spreadsheet list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty spreadsheet list"},{"ancestorTitles":["SheetsListTool","error handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"SheetsListTool error handling should handle unexpected errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unexpected errors"}],"endTime":1756208850045,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/tools/sheets/list.tool.test.ts","startTime":1756208849944,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ValidationUtils","validateToolInput function","successful validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function successful validation should successfully validate valid simple data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should successfully validate valid simple data"},{"ancestorTitles":["ValidationUtils","validateToolInput function","successful validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function successful validation should successfully validate valid spreadsheet data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should successfully validate valid spreadsheet data"},{"ancestorTitles":["ValidationUtils","validateToolInput function","successful validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function successful validation should successfully validate nested object data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should successfully validate nested object data"},{"ancestorTitles":["ValidationUtils","validateToolInput function","successful validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function successful validation should handle optional fields correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle optional fields correctly"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle invalid_type errors","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should handle invalid_type errors"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle too_small/too_big constraint errors","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should handle too_small/too_big constraint errors"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle invalid_string format errors","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle invalid_string format errors"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle multiple validation errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple validation errors"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle nested object validation errors","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle nested object validation errors"},{"ancestorTitles":["ValidationUtils","validateToolInput function","validation failures"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function validation failures should handle missing required fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle missing required fields"},{"ancestorTitles":["ValidationUtils","validateToolInput function","type safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function type safety should maintain type inference for successful validation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should maintain type inference for successful validation"},{"ancestorTitles":["ValidationUtils","validateToolInput function","type safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils validateToolInput function type safety should work with generic schema types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should work with generic schema types"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should convert ZodError with single issue","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should convert ZodError with single issue"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should convert ZodError with multiple issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should convert ZodError with multiple issues"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should handle nested path errors correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle nested path errors correctly"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should map specific ZodIssueCodes to appropriate error details","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"status":"passed","title":"should map specific ZodIssueCodes to appropriate error details"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should preserve original error context","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should preserve original error context"},{"ancestorTitles":["ValidationUtils","convertZodErrorToGoogleSheetsError function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils convertZodErrorToGoogleSheetsError function should handle empty ZodError issues array","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty ZodError issues array"},{"ancestorTitles":["ValidationUtils","Integration with SchemaFactory"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Integration with SchemaFactory should work with SchemaFactory generated schemas","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should work with SchemaFactory generated schemas"},{"ancestorTitles":["ValidationUtils","Integration with SchemaFactory"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Integration with SchemaFactory should work with valid SchemaFactory data for sheets-read","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should work with valid SchemaFactory data for sheets-read"},{"ancestorTitles":["ValidationUtils","Integration with SchemaFactory"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Integration with SchemaFactory should handle SchemaFactory validation errors appropriately","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle SchemaFactory validation errors appropriately"},{"ancestorTitles":["ValidationUtils","Error mapping and compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Error mapping and compatibility should create GoogleSheetsError with consistent error structure","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create GoogleSheetsError with consistent error structure"},{"ancestorTitles":["ValidationUtils","Error mapping and compatibility"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Error mapping and compatibility should be compatible with existing error handling flows","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be compatible with existing error handling flows"},{"ancestorTitles":["ValidationUtils","Error mapping and compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Error mapping and compatibility should integrate with existing error factory patterns","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should integrate with existing error factory patterns"},{"ancestorTitles":["ValidationUtils","Performance considerations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Performance considerations should handle large validation errors efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large validation errors efficiently"},{"ancestorTitles":["ValidationUtils","Performance considerations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Performance considerations should validate large objects efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate large objects efficiently"},{"ancestorTitles":["ValidationUtils","Edge cases and error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Edge cases and error handling should handle null and undefined inputs gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle null and undefined inputs gracefully"},{"ancestorTitles":["ValidationUtils","Edge cases and error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Edge cases and error handling should handle malformed input data","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle malformed input data"},{"ancestorTitles":["ValidationUtils","Edge cases and error handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils Edge cases and error handling should preserve error stack traces","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve error stack traces"},{"ancestorTitles":["ValidationUtils class (if implemented)","static utility methods"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils class (if implemented) static utility methods should provide static validation method","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide static validation method"},{"ancestorTitles":["ValidationUtils class (if implemented)","static utility methods"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils class (if implemented) static utility methods should provide schema validation helpers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should provide schema validation helpers"},{"ancestorTitles":["ValidationUtils class (if implemented)","static utility methods"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationUtils class (if implemented) static utility methods should provide error formatting utilities","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide error formatting utilities"},{"ancestorTitles":["Integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Integration scenarios should handle complete validation workflow for sheets operations","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should handle complete validation workflow for sheets operations"},{"ancestorTitles":["Integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Integration scenarios should demonstrate elimination of validation duplication","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should demonstrate elimination of validation duplication"}],"endTime":1756208850049,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/src/utils/validation.utils.test.ts","startTime":1756208849914,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Registry Integration Tests","End-to-End Service Module Lifecycle"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests End-to-End Service Module Lifecycle should successfully complete full lifecycle: register -> initialize -> register tools/resources -> cleanup","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"status":"passed","title":"should successfully complete full lifecycle: register -> initialize -> register tools/resources -> cleanup"},{"ancestorTitles":["Service Registry Integration Tests","End-to-End Service Module Lifecycle"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests End-to-End Service Module Lifecycle should handle multiple service modules registration and initialization","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should handle multiple service modules registration and initialization"},{"ancestorTitles":["Service Registry Integration Tests","Error Handling and Recovery"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Error Handling and Recovery should handle service initialization failure gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle service initialization failure gracefully"},{"ancestorTitles":["Service Registry Integration Tests","Error Handling and Recovery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Error Handling and Recovery should prevent tool/resource registration when not initialized","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should prevent tool/resource registration when not initialized"},{"ancestorTitles":["Service Registry Integration Tests","Error Handling and Recovery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Error Handling and Recovery should handle partial cleanup failures","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle partial cleanup failures"},{"ancestorTitles":["Service Registry Integration Tests","Extensibility and Future-Proofing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Extensibility and Future-Proofing should demonstrate easy addition of new service modules (simulating Drive)","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should demonstrate easy addition of new service modules (simulating Drive)"},{"ancestorTitles":["Service Registry Integration Tests","Extensibility and Future-Proofing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Extensibility and Future-Proofing should support service module versioning and metadata","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should support service module versioning and metadata"},{"ancestorTitles":["Service Registry Integration Tests","Performance and Resource Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Performance and Resource Management should track initialization and registration metrics","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should track initialization and registration metrics"},{"ancestorTitles":["Service Registry Integration Tests","Performance and Resource Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Registry Integration Tests Performance and Resource Management should prevent duplicate module registration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should prevent duplicate module registration"}],"endTime":1756208850055,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/registry/integration.test.ts","startTime":1756208840056,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SchemaFactory","createSpreadsheetIdSchema"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createSpreadsheetIdSchema should create a valid zod string schema for spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create a valid zod string schema for spreadsheet ID"},{"ancestorTitles":["SchemaFactory","createSpreadsheetIdSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createSpreadsheetIdSchema should have appropriate description","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have appropriate description"},{"ancestorTitles":["SchemaFactory","createRangeSchema"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createRangeSchema should create a valid zod string schema for range","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should create a valid zod string schema for range"},{"ancestorTitles":["SchemaFactory","createRangeSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createRangeSchema should have appropriate description","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have appropriate description"},{"ancestorTitles":["SchemaFactory","createValuesSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createValuesSchema should create a valid zod array schema for values","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should create a valid zod array schema for values"},{"ancestorTitles":["SchemaFactory","createValuesSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createValuesSchema should have appropriate description","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have appropriate description"},{"ancestorTitles":["SchemaFactory","createOptionalValuesSchema"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createOptionalValuesSchema should create an optional values schema","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create an optional values schema"},{"ancestorTitles":["SchemaFactory","createToolInputSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createToolInputSchema should create schema for sheets-list tool","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create schema for sheets-list tool"},{"ancestorTitles":["SchemaFactory","createToolInputSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createToolInputSchema should create schema for sheets-read tool","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create schema for sheets-read tool"},{"ancestorTitles":["SchemaFactory","createToolInputSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createToolInputSchema should create schema for sheets-write tool","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create schema for sheets-write tool"},{"ancestorTitles":["SchemaFactory","createToolInputSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createToolInputSchema should create schema for sheets-append tool","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create schema for sheets-append tool"},{"ancestorTitles":["SchemaFactory","createToolInputSchema"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createToolInputSchema should throw error for unknown tool","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for unknown tool"},{"ancestorTitles":["SchemaFactory","createResponseSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createResponseSchema should create schema for sheets-list response","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create schema for sheets-list response"},{"ancestorTitles":["SchemaFactory","createResponseSchema"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createResponseSchema should create schema for sheets-read response","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create schema for sheets-read response"},{"ancestorTitles":["SchemaFactory","createResponseSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createResponseSchema should create schema for sheets-write response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create schema for sheets-write response"},{"ancestorTitles":["SchemaFactory","createResponseSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createResponseSchema should create schema for sheets-append response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create schema for sheets-append response"},{"ancestorTitles":["SchemaFactory","createResponseSchema"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory createResponseSchema should throw error for unknown response type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for unknown response type"},{"ancestorTitles":["SchemaFactory","validateToolInput"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory validateToolInput should validate sheets-list input successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate sheets-list input successfully"},{"ancestorTitles":["SchemaFactory","validateToolInput"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory validateToolInput should validate sheets-read input successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate sheets-read input successfully"},{"ancestorTitles":["SchemaFactory","validateToolInput"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory validateToolInput should return validation error for invalid input","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return validation error for invalid input"},{"ancestorTitles":["SchemaFactory","validateToolInput"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory validateToolInput should handle unknown tool gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unknown tool gracefully"},{"ancestorTitles":["SchemaFactory","formatValidationError"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory formatValidationError should format validation errors nicely","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should format validation errors nicely"},{"ancestorTitles":["SchemaFactory","formatValidationError"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory formatValidationError should handle single validation error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle single validation error"},{"ancestorTitles":["SchemaFactory","Edge cases and type safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory Edge cases and type safety should handle empty arrays in values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty arrays in values"},{"ancestorTitles":["SchemaFactory","Edge cases and type safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory Edge cases and type safety should handle complex range formats","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle complex range formats"},{"ancestorTitles":["SchemaFactory","Edge cases and type safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory Edge cases and type safety should maintain type safety across schema operations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain type safety across schema operations"},{"ancestorTitles":["SchemaFactory","Performance considerations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SchemaFactory Performance considerations should create schemas efficiently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create schemas efficiently"}],"endTime":1756208850053,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/src/tools/base/tool-schema.test.ts","startTime":1756208849921,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AuthService","constructor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService constructor should create instance with config","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create instance with config"},{"ancestorTitles":["AuthService","initialize"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService initialize should initialize GoogleAuth client with correct config","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should initialize GoogleAuth client with correct config"},{"ancestorTitles":["AuthService","initialize"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"AuthService initialize should return error if key file not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return error if key file not found"},{"ancestorTitles":["AuthService","getAuthClient"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService getAuthClient should return initialized auth client","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return initialized auth client"},{"ancestorTitles":["AuthService","getAuthClient"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService getAuthClient should return error if not initialized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return error if not initialized"},{"ancestorTitles":["AuthService","getAuthClient"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService getAuthClient should return cached client on subsequent calls","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return cached client on subsequent calls"},{"ancestorTitles":["AuthService","validateAuth"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService validateAuth should return true for valid auth","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return true for valid auth"},{"ancestorTitles":["AuthService","validateAuth"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService validateAuth should return false for invalid auth path","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return false for invalid auth path"},{"ancestorTitles":["AuthService","validateAuth"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService validateAuth should return false when access token fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return false when access token fails"},{"ancestorTitles":["AuthService","getGoogleAuth"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService getGoogleAuth should return GoogleAuth instance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return GoogleAuth instance"},{"ancestorTitles":["AuthService","getGoogleAuth"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService getGoogleAuth should initialize if not already initialized","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should initialize if not already initialized"}],"endTime":1756208850081,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/auth.service.test.ts","startTime":1756208849940,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Sample Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Sample Test Suite should pass basic test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass basic test"}],"endTime":1756208850088,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/example.test.ts","startTime":1756208850048,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Config","loadConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Config loadConfig should load valid config from environment variables","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should load valid config from environment variables"},{"ancestorTitles":["Config","loadConfig"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Config loadConfig should throw error for missing required environment variables","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for missing required environment variables"},{"ancestorTitles":["Config","GOOGLE_SCOPES"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Config GOOGLE_SCOPES should contain required Google API scopes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should contain required Google API scopes"}],"endTime":1756208850097,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/config.test.ts","startTime":1756208850044,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ServiceRegistry","registerModule"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerModule should register a service module successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should register a service module successfully"},{"ancestorTitles":["ServiceRegistry","registerModule"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerModule should prevent duplicate module registration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should prevent duplicate module registration"},{"ancestorTitles":["ServiceRegistry","registerModule"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerModule should maintain module registration order","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should maintain module registration order"},{"ancestorTitles":["ServiceRegistry","unregisterModule"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry unregisterModule should unregister a module successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should unregister a module successfully"},{"ancestorTitles":["ServiceRegistry","unregisterModule"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry unregisterModule should return error for non-existent module","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return error for non-existent module"},{"ancestorTitles":["ServiceRegistry","unregisterModule"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry unregisterModule should call cleanup on module if available","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call cleanup on module if available"},{"ancestorTitles":["ServiceRegistry","initializeAll"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry initializeAll should initialize all registered modules","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should initialize all registered modules"},{"ancestorTitles":["ServiceRegistry","initializeAll"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry initializeAll should fail fast on module initialization failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should fail fast on module initialization failure"},{"ancestorTitles":["ServiceRegistry","initializeAll"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry initializeAll should not re-initialize if already initialized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not re-initialize if already initialized"},{"ancestorTitles":["ServiceRegistry","registerAllTools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllTools should register tools from all initialized modules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should register tools from all initialized modules"},{"ancestorTitles":["ServiceRegistry","registerAllTools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllTools should fail if registry is not initialized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail if registry is not initialized"},{"ancestorTitles":["ServiceRegistry","registerAllTools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllTools should fail fast on tool registration error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail fast on tool registration error"},{"ancestorTitles":["ServiceRegistry","registerAllResources"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllResources should register resources from all initialized modules","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should register resources from all initialized modules"},{"ancestorTitles":["ServiceRegistry","registerAllResources"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllResources should fail if registry is not initialized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail if registry is not initialized"},{"ancestorTitles":["ServiceRegistry","registerAllResources"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry registerAllResources should fail fast on resource registration error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail fast on resource registration error"},{"ancestorTitles":["ServiceRegistry","getOverallHealthStatus"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry getOverallHealthStatus should return overall health status","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return overall health status"},{"ancestorTitles":["ServiceRegistry","cleanup"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry cleanup should cleanup all modules in reverse order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should cleanup all modules in reverse order"},{"ancestorTitles":["ServiceRegistry","cleanup"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ServiceRegistry cleanup should continue cleanup even if some modules fail","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should continue cleanup even if some modules fail"}],"endTime":1756208850109,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/registry/service-registry.test.ts","startTime":1756208850044,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsServiceModule","module properties"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule module properties should have correct module properties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have correct module properties"},{"ancestorTitles":["SheetsServiceModule","module properties"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule module properties should not be initialized initially","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not be initialized initially"},{"ancestorTitles":["SheetsServiceModule","initialize"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule initialize should initialize successfully","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should initialize successfully"},{"ancestorTitles":["SheetsServiceModule","initialize"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule initialize should not re-initialize if already initialized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not re-initialize if already initialized"},{"ancestorTitles":["SheetsServiceModule","initialize"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule initialize should handle SheetsService initialization failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle SheetsService initialization failure"},{"ancestorTitles":["SheetsServiceModule","initialize"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule initialize should handle initialization exceptions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle initialization exceptions"},{"ancestorTitles":["SheetsServiceModule","registerTools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerTools should register all tools successfully","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should register all tools successfully"},{"ancestorTitles":["SheetsServiceModule","registerTools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerTools should fail if not initialized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail if not initialized"},{"ancestorTitles":["SheetsServiceModule","registerTools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerTools should handle tool registration failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle tool registration failure"},{"ancestorTitles":["SheetsServiceModule","registerResources"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerResources should register all resources successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should register all resources successfully"},{"ancestorTitles":["SheetsServiceModule","registerResources"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerResources should fail if not initialized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail if not initialized"},{"ancestorTitles":["SheetsServiceModule","registerResources"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule registerResources should handle resource registration failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle resource registration failure"},{"ancestorTitles":["SheetsServiceModule","cleanup"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule cleanup should cleanup successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should cleanup successfully"},{"ancestorTitles":["SheetsServiceModule","cleanup"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule cleanup should handle cleanup exceptions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle cleanup exceptions"},{"ancestorTitles":["SheetsServiceModule","getHealthStatus"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule getHealthStatus should return unhealthy status when not initialized","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return unhealthy status when not initialized"},{"ancestorTitles":["SheetsServiceModule","getHealthStatus"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule getHealthStatus should return healthy status when initialized","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return healthy status when initialized"},{"ancestorTitles":["SheetsServiceModule","getHealthStatus"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule getHealthStatus should include lastChecked timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include lastChecked timestamp"},{"ancestorTitles":["SheetsServiceModule","getters (testing utilities)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule getters (testing utilities) should provide access to internal services for testing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide access to internal services for testing"},{"ancestorTitles":["SheetsServiceModule","getters (testing utilities)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsServiceModule getters (testing utilities) should return undefined for services when not initialized","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return undefined for services when not initialized"}],"endTime":1756208850695,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/registry/sheets/sheets-service-module.test.ts","startTime":1756208840056,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["BaseSheetsTools","Constructor and Basic Properties"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Constructor and Basic Properties should initialize with required services","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should initialize with required services"},{"ancestorTitles":["BaseSheetsTools","Constructor and Basic Properties"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Constructor and Basic Properties should have access to sheetsService and authService","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have access to sheetsService and authService"},{"ancestorTitles":["BaseSheetsTools","validateAuthentication"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools validateAuthentication should return success when authentication is valid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return success when authentication is valid"},{"ancestorTitles":["BaseSheetsTools","validateAuthentication"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools validateAuthentication should return error when auth service fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return error when auth service fails"},{"ancestorTitles":["BaseSheetsTools","validateAuthentication"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools validateAuthentication should return error when authentication is invalid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return error when authentication is invalid"},{"ancestorTitles":["BaseSheetsTools","validateAuthentication"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools validateAuthentication should handle exceptions during authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle exceptions during authentication"},{"ancestorTitles":["BaseSheetsTools","calculateStatistics method"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools calculateStatistics method should calculate statistics for valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate statistics for valid data"},{"ancestorTitles":["BaseSheetsTools","calculateStatistics method"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools calculateStatistics method should handle empty values array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty values array"},{"ancestorTitles":["BaseSheetsTools","calculateStatistics method"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools calculateStatistics method should handle arrays with empty rows","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle arrays with empty rows"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should exist and be callable","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should exist and be callable"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should use validateToolInput utility for validation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use validateToolInput utility for validation"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should return success result for valid data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return success result for valid data"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should return error result for invalid data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return error result for invalid data"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should preserve type safety with generic types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve type safety with generic types"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should handle complex validation scenarios","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle complex validation scenarios"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) should handle nested validation errors correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle nested validation errors correctly"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)","Integration with SchemaFactory patterns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) Integration with SchemaFactory patterns should work with SchemaFactory-generated schemas","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should work with SchemaFactory-generated schemas"},{"ancestorTitles":["BaseSheetsTools","New validateWithSchema method (RED PHASE - Should Fail)","Integration with SchemaFactory patterns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools New validateWithSchema method (RED PHASE - Should Fail) Integration with SchemaFactory patterns should handle trimming and transformation correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle trimming and transformation correctly"},{"ancestorTitles":["BaseSheetsTools","Method Removal Verification (GREEN PHASE - After changes)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Method Removal Verification (GREEN PHASE - After changes) should not have validateParameters method (has been removed)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not have validateParameters method (has been removed)"},{"ancestorTitles":["BaseSheetsTools","Method Removal Verification (GREEN PHASE - After changes)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Method Removal Verification (GREEN PHASE - After changes) should not have isValidRangeFormat method (has been removed)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not have isValidRangeFormat method (has been removed)"},{"ancestorTitles":["BaseSheetsTools","Method Removal Verification (GREEN PHASE - After changes)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Method Removal Verification (GREEN PHASE - After changes) should have validateWithSchema method (has been added)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have validateWithSchema method (has been added)"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) should integrate with SchemaFactory.validateRangeFormat instead of internal method","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should integrate with SchemaFactory.validateRangeFormat instead of internal method"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) should handle SchemaFactory validation results correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle SchemaFactory validation results correctly"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)","Future integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) Future integration scenarios should replace isValidRangeFormat with SchemaFactory method","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should replace isValidRangeFormat with SchemaFactory method"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)","Future integration scenarios"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) Future integration scenarios should handle advanced range patterns through SchemaFactory","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should handle advanced range patterns through SchemaFactory"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)","Future integration scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) Future integration scenarios should integrate with tool schema creation patterns","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should integrate with tool schema creation patterns"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)","Migration path from legacy validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) Migration path from legacy validation should maintain backward compatibility during transition","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should maintain backward compatibility during transition"},{"ancestorTitles":["BaseSheetsTools","SchemaFactory Integration (RED PHASE - Future integration)","Migration path from legacy validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools SchemaFactory Integration (RED PHASE - Future integration) Migration path from legacy validation should provide equivalent validation results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide equivalent validation results"},{"ancestorTitles":["BaseSheetsTools","Backward Compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Backward Compatibility should maintain existing authentication functionality","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain existing authentication functionality"},{"ancestorTitles":["BaseSheetsTools","Backward Compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Backward Compatibility should maintain existing calculateStatistics functionality","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should maintain existing calculateStatistics functionality"},{"ancestorTitles":["BaseSheetsTools","Backward Compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Backward Compatibility should maintain inheritance structure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain inheritance structure"},{"ancestorTitles":["BaseSheetsTools","Error Handling Consistency"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Error Handling Consistency should maintain consistent error types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain consistent error types"},{"ancestorTitles":["BaseSheetsTools","Error Handling Consistency"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Error Handling Consistency should log errors consistently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log errors consistently"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Direct validateToolInput utility tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Direct validateToolInput utility tests should properly integrate with validation utilities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should properly integrate with validation utilities"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Direct validateToolInput utility tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Direct validateToolInput utility tests should handle validation errors from utilities","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle validation errors from utilities"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Direct validateToolInput utility tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Direct validateToolInput utility tests should handle complex schema validations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle complex schema validations"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Direct validateToolInput utility tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Direct validateToolInput utility tests should provide detailed validation errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide detailed validation errors"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Future BaseSheetsTools integration patterns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Future BaseSheetsTools integration patterns should replace legacy validateParameters with schema-based validation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should replace legacy validateParameters with schema-based validation"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Future BaseSheetsTools integration patterns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Future BaseSheetsTools integration patterns should provide better error messages than legacy validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide better error messages than legacy validation"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Future BaseSheetsTools integration patterns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Future BaseSheetsTools integration patterns should support transformation and coercion through schemas","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should support transformation and coercion through schemas"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Performance and caching integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Performance and caching integration should leverage schema caching for repeated validations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should leverage schema caching for repeated validations"},{"ancestorTitles":["BaseSheetsTools","Validation Utility Integration (Current and Future)","Performance and caching integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseSheetsTools Validation Utility Integration (Current and Future) Performance and caching integration should handle validation performance efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle validation performance efficiently"}],"endTime":1756208850765,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/src/tools/sheets/base-sheets-tool.test.ts","startTime":1756208840056,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SheetsService","constructor"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService constructor should create instance with AuthService","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create instance with AuthService"},{"ancestorTitles":["SheetsService","initialize"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService initialize should initialize Sheets and Drive APIs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should initialize Sheets and Drive APIs"},{"ancestorTitles":["SheetsService","initialize"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService initialize should set up both sheetsApi and driveApi properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should set up both sheetsApi and driveApi properties"},{"ancestorTitles":["SheetsService","listSpreadsheets"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService listSpreadsheets should return list of spreadsheets from Drive folder","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return list of spreadsheets from Drive folder"},{"ancestorTitles":["SheetsService","listSpreadsheets"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService listSpreadsheets should handle empty folder","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty folder"},{"ancestorTitles":["SheetsService","listSpreadsheets"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService listSpreadsheets should auto-initialize when not initialized","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should auto-initialize when not initialized"},{"ancestorTitles":["SheetsService","getSpreadsheet"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService getSpreadsheet should return spreadsheet info for valid ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return spreadsheet info for valid ID"},{"ancestorTitles":["SheetsService","getSpreadsheet"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService getSpreadsheet should return error for invalid spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return error for invalid spreadsheet ID"},{"ancestorTitles":["SheetsService","getSpreadsheet"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService getSpreadsheet should return error for empty spreadsheet ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return error for empty spreadsheet ID"},{"ancestorTitles":["SheetsService","getSpreadsheet"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService getSpreadsheet should handle spreadsheet not found error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle spreadsheet not found error"},{"ancestorTitles":["SheetsService","readRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService readRange should read data from specified range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should read data from specified range"},{"ancestorTitles":["SheetsService","readRange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService readRange should return empty data for empty range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return empty data for empty range"},{"ancestorTitles":["SheetsService","readRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService readRange should handle invalid range format","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should handle invalid range format"},{"ancestorTitles":["SheetsService","readRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService readRange should handle single cell range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle single cell range"},{"ancestorTitles":["SheetsService","writeRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService writeRange should write data to specified range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should write data to specified range"},{"ancestorTitles":["SheetsService","writeRange"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService writeRange should handle empty values array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty values array"},{"ancestorTitles":["SheetsService","writeRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService writeRange should handle single cell write","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle single cell write"},{"ancestorTitles":["SheetsService","writeRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService writeRange should validate range and values dimensions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate range and values dimensions"},{"ancestorTitles":["SheetsService","writeRange"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService writeRange should handle large data sets","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle large data sets"},{"ancestorTitles":["SheetsService","appendData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService appendData should append data to spreadsheet","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should append data to spreadsheet"},{"ancestorTitles":["SheetsService","appendData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService appendData should handle multiple rows of data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple rows of data"},{"ancestorTitles":["SheetsService","appendData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService appendData should handle empty values in append","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty values in append"},{"ancestorTitles":["SheetsService","appendData"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService appendData should validate range format for append","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should validate range format for append"},{"ancestorTitles":["SheetsService","appendData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService appendData should append to different sheets within same spreadsheet","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should append to different sheets within same spreadsheet"},{"ancestorTitles":["SheetsService","error handling"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService error handling should handle authentication errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle authentication errors"},{"ancestorTitles":["SheetsService","error handling"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService error handling should handle network errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle network errors"},{"ancestorTitles":["SheetsService","error handling"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService error handling should handle API rate limiting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle API rate limiting"},{"ancestorTitles":["SheetsService","error handling"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService error handling should handle quota exceeded errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle quota exceeded errors"},{"ancestorTitles":["SheetsService","integration with AuthService"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService integration with AuthService should call AuthService methods correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should call AuthService methods correctly"},{"ancestorTitles":["SheetsService","integration with AuthService"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService integration with AuthService should handle AuthService initialization failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle AuthService initialization failure"},{"ancestorTitles":["SheetsService","integration with AuthService"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SheetsService integration with AuthService should use authenticated client from AuthService","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use authenticated client from AuthService"}],"endTime":1756208851065,"message":"","name":"/Users/yhosok/study/google-workspace-mcp-server/tests/__tests__/sheets.service.test.ts","startTime":1756208840056,"status":"passed","summary":""}],"wasInterrupted":false}
